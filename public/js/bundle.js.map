{"mappings":"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","sources":["public/js/index.js","public/js/mapbox.js","public/js/login.js","public/js/alerts.js","public/js/signup.js","public/js/updateSettings.js","public/js/stripe.js"],"sourcesContent":["/* eslint-disable */\r\nimport { displayMap } from './mapbox';\r\nimport { login, logout } from './login';\r\nimport { signup } from './signup';\r\nimport { updateSettings } from './updateSettings';\r\nimport { bookTour } from './stripe';\r\nimport { showAlert } from './alerts';\r\n\r\n// DOM ELEMENTS\r\nconst mapBox = document.getElementById('map'); \r\nconst loginForm = document.querySelector('.form--login');\r\nconst signupForm = document.querySelector('.form--signup');\r\nconst logoutBtn = document.querySelector('.nav__el.nav__el--logout');\r\nconst userDataForm = document.querySelector('.form-user-data');\r\nconst userPasswordForm = document.querySelector('.form-user-password');\r\nconst bookBtn = document.getElementById('book-tour')\r\n\r\n// DELEGATION\r\nif(mapBox){\r\n    const locations = JSON.parse(mapBox.dataset.locations);\r\n    // console.log(locations);\r\n    displayMap(locations);\r\n}\r\n\r\nif(loginForm)\r\n    loginForm.addEventListener('submit', e => {\r\n        e.preventDefault(); //This prevents the form from loading any other page\r\n\r\n        const email = document.getElementById('email').value;\r\n        const password = document.getElementById('password').value;\r\n        login(email, password);\r\n    });\r\n\r\nif(signupForm)\r\n    signupForm.addEventListener('submit', e => {\r\n        e.preventDefault(); //This prevents the form from loading any other page\r\n        \r\n        const name = document.getElementById('name').value;\r\n        const email = document.getElementById('email').value;\r\n        const password = document.getElementById('password').value;\r\n        const passwordConfirm = document.getElementById('passwordConfirm').value\r\n        const role = document.getElementById('role').value\r\n        signup(name, email, password, passwordConfirm, role);\r\n        });\r\n\r\nif(logoutBtn) logoutBtn.addEventListener('click', logout);\r\n\r\nif(userDataForm) \r\n    userDataForm.addEventListener('submit', e => {\r\n        e.preventDefault(); //This prevents the form from loading any other page\r\n        const form = new FormData();\r\n        // Because of photo we do it like this\r\n        form.append('name', document.getElementById('name').value);\r\n        form.append('email', document.getElementById('email').value);\r\n        form.append('photo', document.getElementById('photo').files[0]);\r\n        // console.log(form);\r\n\r\n        // const name = document.getElementById('name').value;\r\n        // const email = document.getElementById('email').value;\r\n        // updateSettings({name, email}, 'data');\r\n        updateSettings(form, 'data');\r\n\r\n    })\r\n\r\nif(userPasswordForm) \r\n    userPasswordForm.addEventListener('submit', async e => {\r\n        e.preventDefault(); //This prevents the form from loading any other page\r\n        // Password updating takes time due to encryption process so while password updates, show this nice UI\r\n        document.querySelector('.btn--save-password').textContent = 'Updating...'\r\n\r\n        const passwordCurrent = document.getElementById('password-current').value;\r\n        const password = document.getElementById('password').value;\r\n        const passwordConfirm = document.getElementById('password-confirm').value;\r\n        await updateSettings({passwordCurrent, password, passwordConfirm}, 'password');\r\n\r\n        // After updatiion has been done, change the button text back to original\r\n        document.querySelector('.btn--save-password').textContent = 'Save password'\r\n\r\n        // To clear the password fields after password has been updated\r\n        document.getElementById('password-current').value = ''\r\n        document.getElementById('password').value = ''\r\n        document.getElementById('password-confirm').value = ''\r\n\r\n    });\r\n\r\nif(bookBtn)\r\n    bookBtn.addEventListener('click', e => {\r\n        // e.target is the element that was clicked/triggered this event listener\r\n        // In pug in data attribute it is written as tour-id, in javascript whenever there is a -, it will automatically be converted to camel case\r\n        e.target.textContent = 'Processing...'\r\n        const tourID = e.target.dataset.tourId;\r\n        bookTour(tourID);\r\n});\r\n\r\nconst alertMessage = document.querySelector('body').dataset.alert;\r\nif(alert) showAlert('success', alertMessage, 20);  ","/* eslint-disable */\r\n\r\n// Getting the location data from tour.pug where it is stored as string. It is contained in locations property.\r\n// const locations = JSON.parse(document.getElementById('map').dataset.locations);\r\n// console.log(locations);\r\n\r\nexport const displayMap = (locations) => {\r\n\tmapboxgl.accessToken = 'pk.eyJ1IjoiYXRpc2gzODY2IiwiYSI6ImNseDF3Z2l2azBna28ybHF1MTNyZnQ2NDAifQ.SzSWQRFfPtb-Oh8cmob_HQ';\r\nconst map = new mapboxgl.Map({\r\n\tcontainer: 'map', // container ID. This will put the map on an element with the id map and we have it in tour.pug\r\n\tstyle: 'mapbox://styles/atish3866/clx30d48c005r01qqanzj9rr4', // style URL\r\n\tscrollZoom: false\r\n\t// center: [-118.113491, 34.111745], // starting position [lng, lat]\r\n\t// zoom: 10, // starting zoom\r\n\t// interactive: false\r\n});\r\n\r\n// This will be the area that will be displayed on the map\r\nconst bounds = new mapboxgl.LngLatBounds();\r\n\r\nlocations.forEach(loc => {\r\n\t// Create Marker on locations\r\n\tconst el = document.createElement('div');\r\n\t// In CSS, we have a class of marker\r\n\tel.className = 'marker';\r\n\r\n\t// Add a marker inside the mapbox\r\n\tnew mapboxgl.Marker({\r\n\t\telement : el,\r\n\t\t// Bottom of the element, which in this case is pin, is going to be located at the exact GPS location \r\n\t\tanchor: 'bottom'\r\n\t}).setLngLat(loc.coordinates).addTo(map); //In locations document embedded in tours document, locations has coordinates property.\r\n\r\n\t// Add a popup\r\n\tnew mapboxgl.Popup({\r\n\t\t// As markers overlap\r\n\t\toffset : 30\r\n\t}).setLngLat(loc.coordinates).setHTML(`<p>Day ${loc.day}: ${loc.description}</p>`).addTo(map);\r\n\r\n\t// Extend map bounds to include current location\r\n\tbounds.extend(loc.coordinates);\r\n})//The map in addTo is the map variable above\r\n\r\nmap.fitBounds(bounds, {\r\n\tpadding : {\r\n\t\t\t// Specifying padding because of unique style of tour page\r\n\t\t\ttop : 200,\r\n\t\t\tbottom : 150,\r\n\t\t\tleft : 100,\r\n\t\t\tright : 100\r\n\t}\r\n});\r\n}\r\n\r\n// mapboxgl.accessToken = 'pk.eyJ1IjoiYXRpc2gzODY2IiwiYSI6ImNseDF3Z2l2azBna28ybHF1MTNyZnQ2NDAifQ.SzSWQRFfPtb-Oh8cmob_HQ';\r\n// const map = new mapboxgl.Map({\r\n// \tcontainer: 'map', // container ID. This will put the map on an element with the id map and we have it in tour.pug\r\n// \tstyle: 'mapbox://styles/atish3866/clx30d48c005r01qqanzj9rr4', // style URL\r\n// \tscrollZoom: false\r\n// \t// center: [-118.113491, 34.111745], // starting position [lng, lat]\r\n// \t// zoom: 10, // starting zoom\r\n// \t// interactive: false\r\n// });\r\n\r\n// // This will be the area that will be displayed on the map\r\n// const bounds = new mapboxgl.LngLatBounds();\r\n\r\n// locations.forEach(loc => {\r\n// \t// Create Marker on locations\r\n// \tconst el = document.createElement('div');\r\n// \t// In CSS, we have a class of marker\r\n// \tel.className = 'marker';\r\n\r\n// \t// Add a marker inside the mapbox\r\n// \tnew mapboxgl.Marker({\r\n// \t\telement : el,\r\n// \t\t// Bottom of the element, which in this case is pin, is going to be located at the exact GPS location \r\n// \t\tanchor: 'bottom'\r\n// \t}).setLngLat(loc.coordinates).addTo(map); //In locations document embedded in tours document, locations has coordinates property.\r\n\r\n// \t// Add a popup\r\n// \tnew mapboxgl.Popup({\r\n// \t\t// As markers overlap\r\n// \t\toffset : 30\r\n// \t}).setLngLat(loc.coordinates).setHTML(`<p>Day ${loc.day}: ${loc.description}</p>`).addTo(map);\r\n\r\n// \t// Extend map bounds to include current location\r\n// \tbounds.extend(loc.coordinates);\r\n// })//The map in addTo is the map variable above\r\n\r\n// map.fitBounds(bounds, {\r\n// \tpadding : {\r\n// \t\t\t// Specifying padding because of unique style of tour page\r\n// \t\t\ttop : 200,\r\n// \t\t\tbottom : 150,\r\n// \t\t\tleft : 100,\r\n// \t\t\tright : 100\r\n// \t}\r\n// });","/* eslint-disable */\r\n\r\nimport { showAlert } from './alerts';\r\n\r\n// const hideAlert =() => {\r\n//     const el = document.querySelector('.alert');\r\n//     if(el) el.parentElement.removeChild(el);\r\n// }\r\n\r\n// // type is 'success' or 'error'\r\n// const showAlert = (type, msg) => {\r\n\r\n//     hideAlert();\r\n//     // Don't remove the double quotes or it won't work.\r\n//     const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\r\n//     document.querySelector('body').insertAdjacentHTML('afterbegin', markup)\r\n//     window.setTimeout(hideAlert, 5000); //5 seconds\r\n// }\r\n\r\nexport const login = async (email, password) => {\r\n    try{\r\n        const result = await axios({\r\n            method : 'POST',\r\n            url : '/api/v1/users/login',\r\n            data : {\r\n                // We expect email and password and the key names are also email and password. Check the endpoint in Postman and then the body.\r\n                email : email,\r\n                password : password\r\n            }\r\n        });\r\n\r\n        // The 'data' is the JSON response\r\n        if(result.data.status === 'success') {\r\n            showAlert('success', 'Logged in successfully')\r\n            window.setTimeout(() => {\r\n                // To load another page\r\n                location.assign('/');\r\n            }, 1500); //1.5 seconds\r\n        }\r\n    }catch(err){\r\n        showAlert('error', err.response.data.message);\r\n    }\r\n}\r\n\r\nexport const logout = async () => {\r\n    try{\r\n        const result = await axios({\r\n            method: 'GET',\r\n            url: '/api/v1/users/logout'\r\n        });\r\n        // Need to refresh the page or the page will keep showing logged in user\r\n        if(result.data.status = 'success') location.reload(true); //true will set reload from server and not browser cache\r\n    }catch(err){\r\n        console.log(err.message)\r\n        showAlert('error', 'Error logging out! Try again.')\r\n    }\r\n}\r\n\r\n// document.querySelector('.form').addEventListener('submit', e => {\r\n//     e.preventDefault(); //This prevents the form from loading any other page\r\n\r\n//     const email = document.getElementById('email').value;\r\n//     const password = document.getElementById('password').value;\r\n//     login(email, password);\r\n// });\r\n\r\n// document.querySelector('.nav__el.nav__el--logout').addEventListener('click', logout);\r\n\r\n\r\n","/* eslint-disable */\r\n\r\nexport function hideAlert() {\r\n    const el = document.querySelector('.alert');\r\n    if(el) el.parentElement.removeChild(el);\r\n}\r\n\r\n// type is 'success' or 'error'\r\nexport function showAlert(type, msg, time = 5) {\r\n\r\n    hideAlert();\r\n\r\n    const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\r\n    document.querySelector('body').insertAdjacentHTML('afterbegin', markup)\r\n    window.setTimeout(hideAlert, time * 1000); //5 seconds\r\n}","/* eslint-disable */\r\n\r\nimport { showAlert } from './alerts';\r\n\r\n// const hideAlert =() => {\r\n//   const el = document.querySelector('.alert');\r\n//   if(el) el.parentElement.removeChild(el);\r\n// }\r\n\r\n// // type is 'success' or 'error'\r\n// const showAlert = (type, msg) => {\r\n\r\n//   hideAlert();\r\n//   // Don't remove the double quotes or it won't work.\r\n//   const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\r\n//   document.querySelector('body').insertAdjacentHTML('afterbegin', markup)\r\n//   window.setTimeout(hideAlert, 5000); //5 seconds\r\n// }\r\n\r\nexport const signup = async (name, email, password, passwordConfirm, role) => {\r\n  try {\r\n    const res = await axios({\r\n      method: \"POST\",\r\n      url: \"/api/v1/users/signup\",\r\n      data: {\r\n        name : name,\r\n        email : email,\r\n        password : password,\r\n        passwordConfirm : passwordConfirm,\r\n        role : role\r\n      }\r\n    });\r\n\r\n    if (res.data.status === \"success\") {\r\n      showAlert(\"success\", \"Signed up successfully!\");\r\n      window.setTimeout(() => {\r\n        location.assign(\"/\");\r\n      }, 3000);\r\n    }\r\n  } catch (err) {\r\n    // console.log(err.response.data);\r\n    showAlert(\"error\", err.response.data.message);\r\n  }\r\n};\r\n\r\n// document.querySelector('.form--signup').addEventListener('submit', e => {\r\n//   e.preventDefault(); //This prevents the form from loading any other page\r\n\r\n//   const name = document.getElementById('name').value;\r\n//   const email = document.getElementById('email').value;\r\n//   const password = document.getElementById('password').value;\r\n//   const passwordConfirm = document.getElementById('passwordConfirm').value\r\n//   const role = document.getElementById('role').value\r\n//   signup(name, email, password, passwordConfirm, role);\r\n// });","/* eslint-disable */\r\n\r\nimport { showAlert } from './alerts';\r\n\r\n// type is either 'password' or 'data'\r\nexport const updateSettings = async (data, type) => {\r\n    try{\r\n        // Depending on type, we'll either be updating only user name and email or just the user password\r\n        const url = type === 'password' ? '/api/v1/users/updateMyPassword' : '/api/v1/users/updateMe'\r\n\r\n        const result = await axios({\r\n            method : 'PATCH',\r\n            url : url,\r\n            data : data\r\n        })\r\n\r\n        if(result.data.status === 'success') {\r\n            showAlert('success', `${type.toUpperCase()} updated successfully!`);\r\n        }\r\n    }catch(err){\r\n        console.log(err.message)\r\n        showAlert('error', err.response.data.message);\r\n    }\r\n}","/* eslint-disable */\r\nimport { showAlert } from './alerts';\r\nconst stripe = Stripe('pk_test_51PPMYw04EOVO7dwcTyZoi5eKobKObOtXYojAjQKtin3z8C4cV1h17nBS9eaZDY1AISIwqYkoCJ2OgUOOqwcFpnbK00kn7dU0uB');\r\n\r\n// tourID is gonna come from tour page from Book Tour button in tour.pug\r\nexport const bookTour = async tourID => {\r\n    try{\r\n        // 1) Get checkout session from API\r\n        const session = await axios(`/api/v1/bookings/checkout-session/${tourID}`);\r\n        // console.log(session);\r\n\r\n        // 2) Create checkout form + charge credit card\r\n        await stripe.redirectToCheckout({\r\n            sessionId : session.data.session.id\r\n        });\r\n    }catch(err){\r\n        console.log(err);\r\n        showAlert('error', err.message);\r\n    }\r\n}"],"names":[],"version":3,"file":"bundle.js.map","sourceRoot":"../../"}